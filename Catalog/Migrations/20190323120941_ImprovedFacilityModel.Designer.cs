// <auto-generated />
using System;
using Catalog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Catalog.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190323120941_ImprovedFacilityModel")]
    partial class ImprovedFacilityModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Catalog.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppartmentNumber");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<int>("HouseNumber");

                    b.Property<string>("Street");

                    b.Property<int>("ZipCode");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Catalog.Models.FacilityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FacilityAddressAddressId");

                    b.Property<int>("FacilityType");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone");

                    b.Property<int>("Price");

                    b.Property<double>("Rating");

                    b.Property<DateTime?>("ScheduleOpen");

                    b.HasKey("Id");

                    b.HasIndex("FacilityAddressAddressId");

                    b.HasIndex("ScheduleOpen");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("Catalog.Models.FeedbackModel", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Message")
                        .IsRequired();

                    b.Property<int>("Rating");

                    b.HasKey("FeedbackId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Catalog.Models.Schedule", b =>
                {
                    b.Property<DateTime>("Open");

                    b.Property<DateTime>("Closed");

                    b.Property<int>("WorkingDays");

                    b.HasKey("Open");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("Catalog.Models.FacilityModel", b =>
                {
                    b.HasOne("Catalog.Models.Address", "FacilityAddress")
                        .WithMany()
                        .HasForeignKey("FacilityAddressAddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Catalog.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleOpen");
                });
#pragma warning restore 612, 618
        }
    }
}
