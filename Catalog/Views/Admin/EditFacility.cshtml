@model Catalog.DAL.Models.Facility

@{
    ViewData["Title"] = "Edit";
}

<div id="editFacWrapper">

    <h4>Edit</h4>

    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="EditFacility">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="FacilityOwnerId" />
                <input type="hidden" asp-for="Address.FacilityId" />
                <input type="hidden" asp-for="Address.Id" />
                <input type="hidden" asp-for="Schedule.Id" />
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Phone" class="control-label"></label>
                    <input asp-for="Phone" class="form-control" />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="FacilityType" class="control-label"></label>
                    <input asp-for="FacilityType" class="form-control" />
                    <span asp-validation-for="FacilityType" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Address.Country" class="control-label"></label>
                    <input asp-for="Address.Country" class="form-control" />
                    <span asp-validation-for="Address.Country" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Address.City" class="control-label"></label>
                    <input asp-for="Address.City" class="form-control" />
                    <span asp-validation-for="Address.City" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Address.Street" class="control-label"></label>
                    <input asp-for="Address.Street" class="form-control" />
                    <span asp-validation-for="Address.Street" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Address.HouseNumber" class="control-label"></label>
                    <input asp-for="Address.HouseNumber" class="form-control" />
                    <span asp-validation-for="Address.HouseNumber" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Address.ZipCode" class="control-label"></label>
                    <input asp-for="Address.ZipCode" class="form-control" />
                    <span asp-validation-for="Address.ZipCode" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Schedule.Open" class="control-label"></label>
                    <input asp-for="Schedule.Open" class="form-control" />
                    <span asp-validation-for="Schedule.Open" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Schedule.Closed" class="control-label"></label>
                    <input asp-for="Schedule.Closed" class="form-control" />
                    <span asp-validation-for="Schedule.Closed" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input type="submit" value="Update" class="btn btn-success" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }

</div>